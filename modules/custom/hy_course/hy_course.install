<?php
/**
 * @file Takes care of installation/uninstallation/updates.
 */

/**
 * Migrate all faculty field text values into taxonomy terms.
 */
function hy_course_update_7010(&$sandbox) {

  /*
   * Overall steps in this update hook:
   *   - Query all existing values of current faculties, so we can later migrate
   *     them as terms and term references.
   *   - Delete the text field, so we can set new field as term reference field.
   *   - Revert feature modules for setting up new term reference field
   *   - Create terms
   *   - Create term references from courses to faculties
   */

  // Query all current faculties
  $previous_faculties_query = db_query("SELECT entity_id as nid, language, field_course_faculty_value as value FROM field_data_field_course_faculty");
  $previous_faculties_query->execute();

  // Delete *and purge* the text field, so we can set new field as term
  // reference field. See field_cron()
  field_delete_field('field_course_faculty');
  field_sync_field_status();
  $limit = variable_get('field_purge_batch_size', 10);
  field_purge_batch($limit);

  // Revert field bases feature and myself, so new vocabulary gets created by
  // features.
  features_revert_module('hy_portal_field_base');
  features_revert_module('hy_course');

  // Load vocabulary of faculties, for creating references from taxonomy terms
  // and cleaning up of its terms if there are any (should not).
  $faculty_vocabulary = taxonomy_vocabulary_machine_name_load('faculty');

  // Even update hooks are meant to be executed only once, lets anyway ensure
  // that we're clean before adding terms.
  $existing_terms = taxonomy_term_load_multiple(array(), array('vid' => $faculty_vocabulary->vid));
  foreach ($existing_terms as $existing_term) {
    taxonomy_term_delete($existing_term->tid);
  }

  /* Aggregate items and construct following array structure as
   * $aggreagated_faculties:
   *   [2870268] => Array
   *       (
   *           [en] => Science
   *           [fi] => Matemaattis-luonnontieteellinen
   *           [sv] => Matematisk-naturvetenskapliga
   *       )
   *   [2870269] => Array
   *       (
   *           [en] => Science
   *           [fi] => Matemaattis-luonnontieteellinen
   *           [sv] => Matematisk-naturvetenskapliga
   *       )
   *   [2870270] => Array
   *       (
   *           [en] => Arts
   *           [fi] => Humanistinen
   *           [sv] => Humanistiska
   *       )
   */
  $aggreagated_faculties = array();
  while ($item = $previous_faculties_query->fetchAssoc()) {
    $aggreagated_faculties[$item['nid']][$item['language']] = $item['value'];
  }

  /*
   * Now create terms and keep track of which node refers to which faculty with
   * following structure:
   *   [Agriculture and Forestry] => Array
   *     (
   *         [tid] => 272
   *         [nids] => Array
   *             (
   *                 [0] => 513
   *                 [1] => 514
   *                 [2] => 515
   *                 [3] => 516
   *                 [4] => 517
   *                 [5] => 518
   *                 [6] => 576
   *                 [7] => 577
   *                 [8] => 578
   *                 [9] => 708
   *                 [10] => 887
   *                 [11] => 888
   *                 [12] => 2195256
   *                 [13] => 2641489
   *                 [14] => 2862204
   *             )
   *     )
   * [Medicine] => Array
   *     (
   *         [tid] => 273
   *         [nids] => Array
   *             (
   *                 [0] => 2862178
   *                 [1] => 2862179
   *                 [2] => 2862180
   *                 [3] => 2862181
   *                 [4] => 2862182
   *                 [5] => 2862183
   *                 [6] => 2862184
   *                 [7] => 2862185
   *                 [8] => 2862186
   *                 [9] => 2862187
   *                 [10] => 2862188
   *                 [11] => 2862196
   *                 [12] => 2865125
   *             )
   *     )
   *
   */
  $created_terms = array();
  foreach ($aggreagated_faculties as $nid => $faculty) {

    // If this faculty term has not been yet created...
    if (!isset($created_terms[$faculty['en']])) {

      // Build new taxonomy term entity object
      $values = array(
        'vid' => $faculty_vocabulary->vid,
        'vocabulary_machine_name' => $faculty_vocabulary->machine_name,
        'name' => $faculty['en'],
        'description_field' => array(),
        'format' => 'plain_text',
        'weight' => 0,
        'name_field' => array(
          'en' => array(array('value' => $faculty['en'])),
          'fi' => array(array('value' => $faculty['fi'])),
          'sv' => array(array('value' => $faculty['sv'])),
        ),
      );
      $term = entity_create('taxonomy_term', $values);

      // Create translation handler for keeping track of translations
      $translation_handler = entity_translation_get_handler('taxonomy_term', $term);
      $translation_handler->setOriginalLanguage('en');

      // And then set the translations
      $translations = array(
        array(
          'translate' => 0,
          'status' => 1,
          'language' => 'en',
        ),
        array(
          'translate' => 0,
          'status' => 1,
          'language' => 'fi',
          'source' => 'en',
        ),
        array(
          'translate' => 0,
          'status' => 1,
          'language' => 'sv',
          'source' => 'en',
        ),
      );
      foreach ($translations as $translation) {
        $translation_handler->setTranslation($translation, $term);
      }

      // Now save the term and translations
      taxonomy_term_save($term);
      $translation_handler->saveTranslations();

      // Keep track what terms we already have created, we don't want to repeat
      // ourself by doing same term multiple times.
      $created_terms[$faculty['en']] = array('tid' => $term->tid, 'nids' => array());

    }

    // Append this node id
    $created_terms[$faculty['en']]['nids'][] = $nid;

  }

  // Now after aggregating each term and corresponding nids, lets create term
  // references.
  $fields = array(
    'entity_type' => 'node',
    'bundle' => 'course',
    'deleted' => 0,
    'entity_id' => 0,
    'revision_id' => 0,
    'language' => LANGUAGE_NONE,
    'delta' => 0,
    'field_course_faculty_tid' => 0,
  );
  foreach ($created_terms as $created_term) {
    if (!empty($created_term['nids'])) {
      foreach ($created_term['nids'] as $nid) {
        $values = $fields;
        $values['entity_id'] = $nid;
        $values['revision_id'] = $nid;
        $values['field_course_faculty_tid'] = $created_term['tid'];
        db_insert('field_data_field_course_faculty')
          ->fields(array_keys($fields))
          ->values($values)
          ->execute();
        db_insert('field_revision_field_course_faculty')
          ->fields(array_keys($fields))
          ->values($values)
          ->execute();
      }
    }
  }
  field_cache_clear();

}
