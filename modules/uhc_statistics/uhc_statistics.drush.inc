<?php
/**
 * @file
 * Drush integration for the module.
 *
 * @license GPL, or GNU General Public License, version 3
 * @license http://opensource.org/licenses/GPL-3.0
 * @see README.md how to contribute to this project
 */

/**
 * Implements hook_drush_command().
 */
function uhc_statistics_drush_command() {
  $items = array();
  $items['uhc-statistics-strip-by-user1'] = array(
    'description' => 'Removes all statistics that are generated by user 1.',
    'callback' => 'uhc_statistics_strip_by_user1',
    'aliases' => array('uhc-sibu'),
  );
  return $items;
}

/**
 * Callback function for stripping out all statistics data generated by user 1.
 */
function uhc_statistics_strip_by_user1() {

  // Gather numbers for user confirmation dialog
  $counts = array();
  $counts['private_statistics'] = _uhc_statistics_get_user1_statistics_by_type('course_implementation_private_statistics');
  $counts['update_statistics'] = _uhc_statistics_get_user1_statistics_by_type('course_implementation_update_statistics');
  $mids = array();
  foreach ($counts as $count) {
    drush_print(dt('Found @count items from "@source"', array('@count' => $count['total'], '@source' => $count['source'])));
    $total += $count['total'];
    $mids = array_merge($mids, $count['mids']);
  }

  if ($total > 0) {
    if (drush_confirm('Are you sure, you want to delete statistics data by user 1?')) {
      message_delete_multiple($mids);
      drush_print(dt('Deleted @count statistics data', array('@count' => $total)));
    }
  }
  else {
    drush_print(dt('There was no statistics data to strip. Nothing was done.'));
  }

}

/**
 * Helper function for getting an compatible array for
 * uhc_statistics_strip_by_user1() function.
 *
 * @param $type
 * @return array
 * @see uhc_statistics_strip_by_user1()
 */
function _uhc_statistics_get_user1_statistics_by_type($type) {
  $results = db_select('message')->fields('message', array('mid'))->condition('type', $type)->condition('uid', 1)->execute();
  $mids = array_keys($results->fetchAllKeyed());
  return array(
    'total' => count($mids),
    'mids' => $mids,
    'source' => 'message:' . $type,
  );
}
