<?php
/**
 * @file
 * Code for the uhc_search_front_page feature.
 *
 * @license GPL, or GNU General Public License, version 3
 * @license http://opensource.org/licenses/GPL-3.0
 * @see README.md how to contribute to this project
 */

include_once 'uhc_search_front_page.features.inc';

/**
 * Implements hook_form_alter().
 */
function uhc_search_front_page_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#id'] == 'views-exposed-form-uhc-portal-search-front-page--desktop') {
    $form['search']['#attributes']['placeholder'] = t('The name or code of the course');
  }
}

/**
 * Implements hook_views_pre_build().
 */
function uhc_search_front_page_views_pre_build(&$view) {
  // DOO-2372: HULIB wants feed with no hierarchy position restrictions. Allow
  // this by GET parameters. This couldn't be achieved with contextual filters
  // as they aren't compatible with facet_prerry_paths that we use. We can't
  // also disable them because then the search breaks. And we can't fix it
  // because it's already a hack (for fancy UX filtering) that barely works :)
  /** @var $view view */
  if ($view->name == 'uhc_portal_search_front_page_' && $view->display_handler->plugin_name == 'feed') {
    $parameter_name = variable_get('uhc_search_front_page_disable_filter_parameter_name', 'disable_filter');
    $filter_whitelist = variable_get('uhc_search_front_page_disable_filter_whitelist', array());
    if (!empty($_GET[$parameter_name]) && in_array($_GET[$parameter_name], $filter_whitelist)) {
      unset($view->filter[$_GET['disable_filter']]);
    }
  }
}

/**
 * Implements hook_facet_items_alter().
 *
 * When on front page search, enable alternative titles for type of teaching terms
 * in facet blocks.
 */
function uhc_search_front_page_facet_items_alter(&$build, &$settings) {
  if (!empty($build)) {
    if ($settings->facet == 'field_imp_reference_to_courses:field_course_type_of_teaching' && arg(0) == 'search') {
      foreach ($build as $key => $item) {
        $term = taxonomy_term_load($key);
        if(!empty($term->field_alternative_title)) {
          $field_item = field_get_items('taxonomy_term', $term, 'field_alternative_title', $term->field_alternative_title);
          $field_value = field_view_value('taxonomy_term', $term, 'field_alternative_title', $field_item[0]);
          if (render($field_value)) {
            $build[$key]['#markup'] = render($field_value);
          }
        }
      }
    }
  }
}
