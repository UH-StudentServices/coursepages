<?php
/**
 * @file
 * Code for the uhc_ds feature.
 *
 * @license GPL, or GNU General Public License, version 3
 * @license http://opensource.org/licenses/GPL-3.0
 * @see README.md how to contribute to this project
 */

include_once 'uhc_ds.features.inc';

/**
 * Implements hook_ds_fields_info().
 *
 * Introduce fields for bringing course fields to course implementation.
 */
function uhc_ds_ds_fields_info($entity_type) {
  if ($entity_type == 'node') {

    // This is the list of fields, we want to bring in from course node to
    // course implementation display suite package.
    $embeddable_fields = array(
      'uhc_ds_course_number' => array(
        'function' => 'uhc_ds_render_inherited_ds_field',
        'field_name' => 'field_course_course_number',
        'label' => 'Course: Course number',
      ),
      'uhc_ds_additional_info' => array(
        'function' => 'uhc_ds_render_comparable_ds_field',
        'field_name' => 'field_additional_info',
        'label' => 'Course implementation or Course: Additional information',
      ),
      'uhc_ds_req_prerequisites' => array(
        'function' => 'uhc_ds_render_comparable_ds_field',
        'field_name' => 'field_req_prerequisites',
        'label' => 'Course implementation or Course: Required pre-requisites',
      ),
      'uhc_ds_contents' => array(
        'function' => 'uhc_ds_render_comparable_ds_field',
        'field_name' => 'field_contents',
        'label' => 'Course implementation or Course: Contents',
      ),
      'uhc_ds_evaluation' => array(
        'function' => 'uhc_ds_render_comparable_ds_field',
        'field_name' => 'field_evaluation',
        'label' => 'Course implementation or Course: Evaluation',
      ),
      'uhc_ds_objective' => array(
        'function' => 'uhc_ds_render_comparable_ds_field',
        'field_name' => 'field_objective',
        'label' => 'Course implementation or Course: Objective',
      ),
      'uhc_ds_target_group' => array(
        'function' => 'uhc_ds_render_comparable_ds_field',
        'field_name' => 'field_target_group',
        'label' => 'Course implementation or Course: Target group',
      ),
      'uhc_ds_study_materials' => array(
        'function' => 'uhc_ds_render_comparable_ds_field',
        'field_name' => 'field_study_materials',
        'label' => 'Course implementation or Course: Study materials',
      ),
      'uhc_ds_conduct' => array(
        'function' => 'uhc_ds_render_comparable_ds_field',
        'field_name' => 'field_conduct',
        'label' => 'Course implementation or Course: Conduct',
      ),

    );

    $ds_fields = array();
    foreach ($embeddable_fields as $embeddable_field => $item) {
      if (isset($item['function'])) {
        $ds_fields[$embeddable_field] = array(
          'title' => $item['label'],
          'field_type' => DS_FIELD_TYPE_FUNCTION,
          'ui_limit' => array('course_implementation|*'),
          'function' => $item['function'],
          'properties' => array(
            'field_name' => $item['field_name'],
            'reference_field' => 'field_imp_reference_to_courses'
          ),
        );
      }
    }

    $ds_fields['uhc_ds_course_reference_accordion'] = array(
      'title' => 'Course Reference Accordion Block',
      'field_type' => DS_FIELD_TYPE_FUNCTION,
      'function' => 'uhc_ds_course_reference_accordion_block',
      'properties' => array(
        'field_name' => 'field_course_reference_accordion',
      ),
    );

    $ds_fields['uhc_ds_imp_status_org_location_date'] = array(
      'title' => 'Course Implementation status, organisation, location and date',
      'field_type' => DS_FIELD_TYPE_FUNCTION,
      'function' => 'uhc_ds_status_org_location_date',
      'properties' => array(
        'field_name' => 'field_imp_status_org_location_date',
      ),
    );

    $ds_fields['uhc_ds_title_and_credit'] = array(
      'title' => 'Title and credit',
      'field_type' => DS_FIELD_TYPE_FUNCTION,
      'function' => 'uhc_ds_title_and_credit',
      'properties' => array(
        'field_name' => 'title_and_credit',
      ),
    );

    $ds_fields['uhc_ds_enrollment_period'] = array(
      'title' => 'Enrolment period',
      'field_type' => DS_FIELD_TYPE_FUNCTION,
      'function' => 'uhc_ds_enrollment_period',
      'properties' => array(
        'field_name' => 'enrollment_period',
      ),
    );

    return array('node' => $ds_fields);
  }
}

/**
 * Helper function for introducing an inherited field.
 * @param $ds_fields
 * @param $embeddable_field
 * @param $label
 * @param $field_name
 */
function _uhc_ds_inherit_from_source(&$ds_fields, $embeddable_field, $label, $field_name) {
  $ds_fields[$embeddable_field] = array(
    'title' => $label,
    'field_type' => DS_FIELD_TYPE_FUNCTION,
    'ui_limit' => array('course_implementation|*'),
    'function' => 'uhc_ds_render_inherited_ds_field',
    'properties' => array(
      'field_name' => $field_name,
      'reference_field' => 'field_imp_reference_to_courses'
    ),
  );
}

/**
 * Helper function for introducing an comparable field.
 * @param $ds_fields
 * @param $embeddable_field
 * @param $label
 * @param $field_name
 */
function _uhc_ds_compare(&$ds_fields, $embeddable_field, $label, $field_name) {
  $ds_fields[$embeddable_field] = array(
    'title' => $label,
    'field_type' => DS_FIELD_TYPE_FUNCTION,
    'ui_limit' => array('course_implementation|*'),
    'function' => 'uhc_ds_render_comparable_ds_field',
    'properties' => array(
      'field_name' => $field_name,
      'reference_field' => 'field_imp_reference_to_courses'
    ),
  );
}

/**
 * This is an callback for rendering an display suite field.
 * @see uhc_ds_ds_fields_info()
 * @see _uhc_ds_inherit_from_source()
 */
function uhc_ds_render_inherited_ds_field($field = NULL) {

  // This is the node we're rendering at the moment.
  $node = $field['entity'];

  // This is th field, where we find out the course node where we take the field
  // for rendering.
  $reference_field = $field['properties']['reference_field'];

  // This is the field, we want to embed
  $field_name = $field['properties']['field_name'];

  // If there's reference to course(s) set, load the node, so we can render its
  // fields
  $course_node = NULL;
  if (isset($node->{$reference_field}[LANGUAGE_NONE])) {
    foreach ($node->{$reference_field}[LANGUAGE_NONE] as $item) {
      if (isset($item['target_id'])) {
        $course_node = node_load($item['target_id']);
        break;
      }
    }
  }

  // If we don't have course node, return nothing!
  if (is_null($course_node)) {
    return NULL;
  }

  // Find out language code so we know which language value we'll fetch
  $langcode = function_exists('i18n_langcode') ? i18n_langcode() : LANGUAGE_NONE;

  // Get values and return the first item. TODO: How we handle multiple values?
  $values = field_get_items('node', $course_node, $field_name, $langcode);
  if (is_array($values)) {
    foreach ($values as $value) {
      if (isset($value['safe_value'])) {
        return $value['safe_value'];
        break;
      }
    }
  }
  return NULL;

}

/**
 * This is an callback for rendering an comparable DS field.
 * @see uhc_ds_ds_fields_info()
 * @see uhc_ds_render_inherited_ds_field()
 */
function uhc_ds_render_comparable_ds_field($field = NULL) {

  // This is the node we're rendering at the moment.
  $node = $field['entity'];

  // This is the field, we want to compare
  $field_name = $field['properties']['field_name'];

  // Find out language code so we know which language value we'll fetch
  $langcode = function_exists('i18n_langcode') ? i18n_langcode() : LANGUAGE_NONE;

  // Get values and return the first item. TODO: How we handle multiple values?
  $values = field_get_items('node', $node, $field_name, $langcode);
  if (is_array($values)) {
    foreach ($values as $value) {
      if (isset($value['safe_value'])) {
        return $value['safe_value'];
        break;
      }
    }
  }

  // If no values from active node, then try inheriting it from course
  return uhc_ds_render_inherited_ds_field($field);

}

/**
 * Callback for rendering course node reference accordion views. Uses node ID as an
 * argument to make the view's work when displayed on subject nodes.
 */
function uhc_ds_course_reference_accordion_block($field) {
  $output = views_embed_view('course_node_references', 'block_2', $field['entity']->nid);
  if (views_get_view_result('course_node_references', 'block_3', $field['entity']->nid)) {
    $output .= views_embed_view('course_node_references', 'block_3', $field['entity']->nid);
  }
  return $output;
}

/**
* Render status, organization, location, and date for Course implementation nodes.
*/
function uhc_ds_status_org_location_date($field) {
  $node = $field['entity'];

  $imp_fields = array(
    'field_imp_begin_date',
    'field_imp_end_date',
    'field_imp_course_organiser',
    'field_imp_locality',
  );

  // extract field values
  foreach ($imp_fields as $imp_field) {
    $values[$imp_field] = field_view_field('node', $node, $imp_field, array('label' => 'hidden'));
  }

  // format status
  $formatted_status = field_view_field('node', $node, 'field_imp_status', array('type' => 'course_implementation_status'));
  $class_name = isset($formatted_status['#items'][0]['value']) ? 'course-implementation-status-' . $formatted_status['#items'][0]['value'] : '';
  $status_text = isset($formatted_status[0]['#markup']) ? $formatted_status[0]['#markup'] : '';
  $status = '<span class="course-implementation-status ' . $class_name . '"><span>' . $status_text . '</span></span>';

  // format date values
  $begin_date = isset($values['field_imp_begin_date']['#items'][0]['value']) ? date('j.n.Y', strtotime($values['field_imp_begin_date']['#items'][0]['value'])) : '';
  $end_date = isset($values['field_imp_end_date']['#items'][0]['value']) ? ' - ' . date('j.n.Y', strtotime($values['field_imp_end_date']['#items'][0]['value'])) : '';
  $time = ' ' . $begin_date . $end_date;

  $organiser = isset($values['field_imp_course_organiser'][0]['#markup']) ? $values['field_imp_course_organiser'][0]['#markup'] : '';
  $locality = isset($values['field_imp_locality']) ? render($values['field_imp_locality']) : '';

  return $status . '<span class="island">' . $organiser . $locality . $time . '</span>';

}

function uhc_ds_title_and_credit($field) {
  $node = $field['entity'];
  $title_field = field_view_field('node', $node, 'title_field');
  $credit_field = field_view_field('node', $node, 'field_study_credit');

  $title = isset($title_field[0]['#markup']) ? $title_field[0]['#markup'] : '';
  $credit = isset($credit_field[0]['#markup']) ? $credit_field[0]['#markup'] : '';

  return $title . ', ' . $credit . ' ' . t('cr');
}

function uhc_ds_enrollment_period($field) {
  $enrollment_period = '';
  $node = $field['entity'];
  $enrollment_begin_date = uhc_ds_get_formatted_date_and_time($node, 'field_imp_enrollment_begin_date');
  $enrollment_end_date = uhc_ds_get_formatted_date_and_time($node, 'field_imp_enrollment_end_date');

  if (!empty($enrollment_begin_date) || !empty($enrollment_end_date)) {
    $enrollment_period = "$enrollment_begin_date - $enrollment_end_date";
  }

  return $enrollment_period;
}

function uhc_ds_get_formatted_date_and_time($node, $date_field_name) {
  $formatted_date_and_time = '';
  $field = field_view_field('node', $node, $date_field_name);
  $unix_timestamp = isset($field['#items'][0]['value']) ? strtotime($field['#items'][0]['value']) : NULL;

  if (isset($unix_timestamp)) {
    $date = date('j.n.Y', $unix_timestamp);
    $time = date('H:i', $unix_timestamp);
    $at = t('at');
    $formatted_date_and_time = "$date $at $time";
  }

  return $formatted_date_and_time;
}
