<?php
/**
 * @file
 * Code for the UHC Taxonomy feature.
 *
 * @license GPL, or GNU General Public License, version 3
 * @license http://opensource.org/licenses/GPL-3.0
 * @see README.md how to contribute to this project
 */

include_once 'uhc_taxonomy.features.inc';

/**
 * Implements hook_taxonomy_term_insert().
 */
function uhc_taxonomy_taxonomy_term_insert($term) {
  if ($term->vocabulary_machine_name == 'months') {
    _uhc_taxonomy_translate_monthyear($term);
  }
}

/**
 * Sorts Month terms to chronological order. This is run after migrations. Each
 * term is saved only if the name or the weight of the term has changed. The
 * original name and the current name of the term differ when the migration is
 * done using admin UI and any other UI language than English.
 */
function uhc_taxonomy_sort_month_terms() {
  $vocabulary = taxonomy_vocabulary_machine_name_load('months');
  if (isset($vocabulary->vid)) {

    // Load months that are inspected for sorting
    $months = taxonomy_get_tree($vocabulary->vid, 0, NULL, TRUE);

    // Loop months and set their name from original name when original name is
    // available. Original name should be in english, because it is imported
    // in drush having english as default language.
    foreach ($months as $month) {
      $month->needs_to_be_saved = FALSE;
      if (isset($month->name_original)) {
        if ($month->name != $month->name_original) {
          // Month name is different from original, probably because we're
          // calling this function from non-english interface. Therefore it
          // needs saving as we don't want to let non-english $month->name's to
          // be stored.
          $month->needs_to_be_saved = TRUE;
        }
        $month->name = $month->name_original;
      }
    }

    // Sort months by date/time that is computed from the name (that should be
    // in english).
    uasort($months, function ($a, $b) {
      return strtotime($a->name) < strtotime($b->name) ? -1 : 1;
    });

    // Loop month and detect which months deviates from original weight and if
    // so, then tag it as needs_to_be_saved. Otherwise if the month weights
    // matches the current sorting, then we don't tag it. Months may need saving
    // due to weight deviation determined in the loop below or name deviation
    // that is determined above.
    $count = 0;
    foreach ($months as $month) {
      if ($month->weight != $count) {
        $month->needs_to_be_saved = TRUE;
      }
      $month->weight = $count;
      if ($month->needs_to_be_saved) {
        taxonomy_term_save($month);
      }
      $count++;
    }
  }
}

/**
 * Implements hook_taxonomy_term_update().
 */
function uhc_taxonomy_taxonomy_term_update($term) {
  if ($term->vocabulary_machine_name == 'months') {
    _uhc_taxonomy_translate_monthyear($term);
  }
}

/**
 * Helper function for translating terms from months.
 *
 * DOO-575: When taxonomy term is saving and it belongs to vocabulary "months",
 * then translate the name to all supported languages.
 *
 * We expect the name to be in "F Y" format (example "September 2015").
 *
 * @param $term
 */
function _uhc_taxonomy_translate_monthyear($term) {
  if (_uhc_taxonomy_monthyear_translations_missing($term)) {
    // We do some sanity check of the name. If it has two words and second is
    // numeric, then we should be fine. (example: September 2015)
    $parts = explode(" ", $term->name);
    if (count($parts) == 2 && is_numeric($parts[1])) {
      list($month, $year) = $parts;
      foreach (PortalMigrationBase::getSupportedLanguages() as $langcode) {
        $translated_month = t($month, array(), array('langcode' => $langcode));
        $term->name_field[$langcode] = array(array('value' => $translated_month . ' ' . $year));
      }

      // Note: Risk of infinite loop (save triggers _insert and _update hooks),
      // please see _uhc_taxonomy_monthyear_translations_missing().
      taxonomy_term_save($term);

    }
    else {
      // If we fail sanity check, make a note in the logs for potential issue
      // detection.
      watchdog('uhc_taxonomy', 'Failed sanity check while translating months. Tried to translate from @name_original', array('@name_original' => $term->name_original), WATCHDOG_WARNING);
    }
  }
}

/**
 * Helper function for determining whether the term is already translated. To
 * supported languages.
 *
 * @param $term
 * @return bool
 */
function _uhc_taxonomy_monthyear_translations_missing($term) {
  foreach (PortalMigrationBase::getSupportedLanguages() as $langcode) {
    if (!isset($term->name_field[$langcode])) {
      return TRUE;
    }
  }
  return FALSE;
}
